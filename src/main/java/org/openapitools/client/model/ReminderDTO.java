/*
 * Hub Token
 * Generate Token
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ReminderDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-07T19:17:40.573+05:30[Asia/Kolkata]")
public class ReminderDTO {
  public static final String SERIALIZED_NAME_REMINDER_TYPE = "reminderType";
  @SerializedName(SERIALIZED_NAME_REMINDER_TYPE)
  private Integer reminderType;

  public static final String SERIALIZED_NAME_SCHEDULING_INTERVAL = "schedulingInterval";
  @SerializedName(SERIALIZED_NAME_SCHEDULING_INTERVAL)
  private Integer schedulingInterval;

  public static final String SERIALIZED_NAME_TIME_UNIT = "timeUnit";
  @SerializedName(SERIALIZED_NAME_TIME_UNIT)
  private Integer timeUnit;

  public static final String SERIALIZED_NAME_MODES = "modes";
  @SerializedName(SERIALIZED_NAME_MODES)
  private List<String> modes = null;


  public ReminderDTO reminderType(Integer reminderType) {
    
    this.reminderType = reminderType;
    return this;
  }

   /**
   * Get reminderType
   * @return reminderType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReminderType() {
    return reminderType;
  }


  public void setReminderType(Integer reminderType) {
    this.reminderType = reminderType;
  }


  public ReminderDTO schedulingInterval(Integer schedulingInterval) {
    
    this.schedulingInterval = schedulingInterval;
    return this;
  }

   /**
   * Get schedulingInterval
   * minimum: 1
   * maximum: 24
   * @return schedulingInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSchedulingInterval() {
    return schedulingInterval;
  }


  public void setSchedulingInterval(Integer schedulingInterval) {
    this.schedulingInterval = schedulingInterval;
  }


  public ReminderDTO timeUnit(Integer timeUnit) {
    
    this.timeUnit = timeUnit;
    return this;
  }

   /**
   * Get timeUnit
   * @return timeUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeUnit() {
    return timeUnit;
  }


  public void setTimeUnit(Integer timeUnit) {
    this.timeUnit = timeUnit;
  }


  public ReminderDTO modes(List<String> modes) {
    
    this.modes = modes;
    return this;
  }

  public ReminderDTO addModesItem(String modesItem) {
    if (this.modes == null) {
      this.modes = new ArrayList<String>();
    }
    this.modes.add(modesItem);
    return this;
  }

   /**
   * Get modes
   * @return modes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getModes() {
    return modes;
  }


  public void setModes(List<String> modes) {
    this.modes = modes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReminderDTO reminderDTO = (ReminderDTO) o;
    return Objects.equals(this.reminderType, reminderDTO.reminderType) &&
        Objects.equals(this.schedulingInterval, reminderDTO.schedulingInterval) &&
        Objects.equals(this.timeUnit, reminderDTO.timeUnit) &&
        Objects.equals(this.modes, reminderDTO.modes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reminderType, schedulingInterval, timeUnit, modes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReminderDTO {\n");
    sb.append("    reminderType: ").append(toIndentedString(reminderType)).append("\n");
    sb.append("    schedulingInterval: ").append(toIndentedString(schedulingInterval)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("    modes: ").append(toIndentedString(modes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

