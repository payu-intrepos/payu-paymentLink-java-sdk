/*
 * Hub Token
 * Generate Token
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AddressDTO;
import org.openapitools.client.model.CustomAttributeDTO;
import org.openapitools.client.model.CustomerDTO;
import org.openapitools.client.model.ReminderDTO;
import org.openapitools.client.model.UdfDTO;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PaymentLinkRequestDTO
 */
public class PaymentLinkRequestDTOTest {
    private final PaymentLinkRequestDTO model = new PaymentLinkRequestDTO();

    /**
     * Model tests for PaymentLinkRequestDTO
     */
    @Test
    public void testPaymentLinkRequestDTO() {
        // TODO: test PaymentLinkRequestDTO
    }

    /**
     * Test the property 'invoiceNumber'
     */
    @Test
    public void invoiceNumberTest() {
        // TODO: test invoiceNumber
    }

    /**
     * Test the property 'isAmountFilledByCustomer'
     */
    @Test
    public void isAmountFilledByCustomerTest() {
        // TODO: test isAmountFilledByCustomer
    }

    /**
     * Test the property 'subAmount'
     */
    @Test
    public void subAmountTest() {
        // TODO: test subAmount
    }

    /**
     * Test the property 'tax'
     */
    @Test
    public void taxTest() {
        // TODO: test tax
    }

    /**
     * Test the property 'shippingCharge'
     */
    @Test
    public void shippingChargeTest() {
        // TODO: test shippingCharge
    }

    /**
     * Test the property 'minAmountForCustomer'
     */
    @Test
    public void minAmountForCustomerTest() {
        // TODO: test minAmountForCustomer
    }

    /**
     * Test the property 'discount'
     */
    @Test
    public void discountTest() {
        // TODO: test discount
    }

    /**
     * Test the property 'adjustment'
     */
    @Test
    public void adjustmentTest() {
        // TODO: test adjustment
    }

    /**
     * Test the property 'smsConfirm'
     */
    @Test
    public void smsConfirmTest() {
        // TODO: test smsConfirm
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'isPartialPaymentAllowed'
     */
    @Test
    public void isPartialPaymentAllowedTest() {
        // TODO: test isPartialPaymentAllowed
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'maxPaymentsAllowed'
     */
    @Test
    public void maxPaymentsAllowedTest() {
        // TODO: test maxPaymentsAllowed
    }

    /**
     * Test the property 'batchId'
     */
    @Test
    public void batchIdTest() {
        // TODO: test batchId
    }

    /**
     * Test the property 'expiryDate'
     */
    @Test
    public void expiryDateTest() {
        // TODO: test expiryDate
    }

    /**
     * Test the property 'scheduledFor'
     */
    @Test
    public void scheduledForTest() {
        // TODO: test scheduledFor
    }

    /**
     * Test the property 'viaEmail'
     */
    @Test
    public void viaEmailTest() {
        // TODO: test viaEmail
    }

    /**
     * Test the property 'viaSms'
     */
    @Test
    public void viaSmsTest() {
        // TODO: test viaSms
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'udf'
     */
    @Test
    public void udfTest() {
        // TODO: test udf
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'emailTemplateName'
     */
    @Test
    public void emailTemplateNameTest() {
        // TODO: test emailTemplateName
    }

    /**
     * Test the property 'smsTemplateName'
     */
    @Test
    public void smsTemplateNameTest() {
        // TODO: test smsTemplateName
    }

    /**
     * Test the property 'validationPeriod'
     */
    @Test
    public void validationPeriodTest() {
        // TODO: test validationPeriod
    }

    /**
     * Test the property 'timeUnit'
     */
    @Test
    public void timeUnitTest() {
        // TODO: test timeUnit
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'successURL'
     */
    @Test
    public void successURLTest() {
        // TODO: test successURL
    }

    /**
     * Test the property 'failureURL'
     */
    @Test
    public void failureURLTest() {
        // TODO: test failureURL
    }

    /**
     * Test the property 'reminder'
     */
    @Test
    public void reminderTest() {
        // TODO: test reminder
    }

    /**
     * Test the property 'customAttributes'
     */
    @Test
    public void customAttributesTest() {
        // TODO: test customAttributes
    }

    /**
     * Test the property 'dropCategory'
     */
    @Test
    public void dropCategoryTest() {
        // TODO: test dropCategory
    }

    /**
     * Test the property 'enforcePayMethod'
     */
    @Test
    public void enforcePayMethodTest() {
        // TODO: test enforcePayMethod
    }

}
